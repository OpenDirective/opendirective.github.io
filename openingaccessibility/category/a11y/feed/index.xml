<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>a11y &#8211; Opening Accessibility</title>
	<atom:link href="/openingaccessibility/category/a11y/feed/" rel="self" type="application/rss+xml" />
	<link>/openingaccessibility</link>
	<description>Where open source joins accessibility</description>
	<lastBuildDate>Thu, 30 Mar 2017 10:26:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.8</generator>
	<item>
		<title>&#8220;I don&#8217;t care about the OS, just give me my web Apps&#8221;</title>
		<link>/openingaccessibility/2016/05/i-dont-care-about-the-os-just-give-me-my-web-apps/</link>
		<comments>/openingaccessibility/2016/05/i-dont-care-about-the-os-just-give-me-my-web-apps/#respond</comments>
		<pubDate>Tue, 10 May 2016 18:01:34 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[Apps]]></category>
		<category><![CDATA[web]]></category>
		<category><![CDATA[web apps]]></category>
		<category><![CDATA[web a11y]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=668</guid>
		<description><![CDATA[So I tweeted in jest to Bruce Lawson today in a conversation about Progressive Web Apps in the aftermath of the excellent WebProgressions one-day conference. And then I realised, I actually meant it! My point is that as a user &#8230; <a href="/openingaccessibility/2016/05/i-dont-care-about-the-os-just-give-me-my-web-apps/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>So I tweeted in jest to Bruce Lawson today in a conversation about Progressive Web Apps in the aftermath of the excellent <a href="https://webprogressions.org/">WebProgressions </a>one-day conference.</p>
<p>And then I realised, I actually meant it!</p>
<p>My point is that as a user of tech I want to get at the content or functionality I find useful or interesting when I want to. I want to do so whatever device I have in front of me of me or on me. I&#8217;m not interested in arbitrary platform distinctions or fan bouy love affairs. To be honest I find the main desktop OSs are ‘the same but different’. Ditto mobile OSs. And that’s OK. I&#8217;d even be happy if devices became commodity infrastructure. But the market isn&#8217;t quite like that.</p>
<p>If I quickly want some info I&#8217;ll use the web. If I want to do something repeatedly and it&#8217;s convenient for me to let the service save info about me for *my* benefit, I&#8217;ll use an app. Furthermore,  as I want probably to get access to the same stuff on different devices that really means I want a web app. That&#8217;s the closest we&#8217;ve so far got to the &#8220;write once, run anywhere dream.</p>
<p>Variety is good for choice and drives quality so I&#8217;m happy that there are competing browsers and OSs. Just as long as they seamlessly support the features I want. And these days that probably means they use basic features covered by a W3C standard.</p>
<p>Does that mean I want my experience of the web sites and apps I access to be identical whatever? Absolutely not. I want variation that suites</p>
<ul>
<li>My interaction modes and environment. For example, desktop with keyboard and large screen or mobile with touch (but note these personal and technical modes are all blurring)</li>
<li>Personalised access according to my preferences and accessibility requirements and environmental constraints (eg driving)</li>
</ul>
<p>Actually, those 2 are really just different facets of the same thing. Personalised Accessible User Experience or AUX</p>
<p>I don&#8217;t want experience based on the suppliers development priorities or convenience. Nor on some marketing wish to push stuff at me for business benefits (especially Ads).  But, it turns out platform <strong>does</strong> matter as the accessible experiences are not equal.</p>
<p>I want a user-centred AUX whatever the device. No more and no less.</p>
<p>Having started taking Microsoft seriously again I do think they get much of this. Even if they are going to start charging for Windows 10 again. It looks like they are focussing on the cloud and services rather than just the Windows OS. With Edge, they are now engaging with web users and development community in very impressive and meaningful ways. They have made accessibility important at a high level. Continuum and devices like Surface Pro accept our desire to change our interaction modes during the day: and even encourage it.</p>
<p>Just don&#8217;t expect them to open source Windows just yet!</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2016/05/i-dont-care-about-the-os-just-give-me-my-web-apps/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>CKEditor  Accessibility Checker for content authors</title>
		<link>/openingaccessibility/2015/05/ckeditor-accessibility-checker-for-content-authors/</link>
		<comments>/openingaccessibility/2015/05/ckeditor-accessibility-checker-for-content-authors/#comments</comments>
		<pubDate>Thu, 28 May 2015 13:28:56 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[opensource]]></category>
		<category><![CDATA[web]]></category>
		<category><![CDATA[CMS]]></category>
		<category><![CDATA[drupal]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=551</guid>
		<description><![CDATA[Here&#8217;s a mini review after a quick play with a preview of the new CKEditor Accessibility Checker plugin for content creators. The plugin is provided by CKSource who lead the development of the open source CKEditor and provide additional commercial grade &#8230; <a href="/openingaccessibility/2015/05/ckeditor-accessibility-checker-for-content-authors/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Here&#8217;s a mini review after a quick play with a preview of the new <a href="http://cksource.com/ckeditor/services#accessibility-checker">CKEditor Accessibility Checker</a> plugin for content creators. The plugin is provided by CKSource who lead the development of the open source <a href="http://ckeditor.com/">CKEditor</a> and provide additional commercial grade services.</p>
<h1>WYSIWYG JavaScript editors</h1>
<p>If your memory is as long as mine you will recall when WYSIWYG javascript editors first appeared back in the days when we spoke excitedly of DHTML (D = Dynamic = scripted). Designed for use in web programs such as Content Management Systems (CMSs, eg Drupal) these editors replace a basic HTML &lt;textarea&gt; with a rich editing experience somewhat similar to using a word processor, including toolbars. They hide the complexities of creating markup by automatically inserting tags into  generated HTML which is then persisted in the CMS and displayed as part of viewed webpages.</p>
<p>Two early editors emerged as leaders, at least when I last looked over 5 years ago; CKEditor and <a href="http://www.tinymce.com/">TinyMCE</a>. Both are still going strong and now have many solid features. While these editors provide a familiar experience when creating rich content, there was a problem. Accessibility. Or rather there were 2 accessibility problems.</p>
<h1>Accessibility woes</h1>
<p>Firstly, the toolbars were initially implemented as bit images and provided no keyboard access. I&#8217;m pleased to say that has now been fixed and in CKEditor for example you hit Alt+F10 to get focus into the toolbars. There are other <a href="http://docs.ckeditor.com/#!/guide/dev_a11y">accessibility features</a> including keyboard shortcuts and even an Accessibility Help screen accessed via Alt+0</p>
<p>The 2nd accessibility issues is harder to solve. It&#8217;s the accessibility of the content created by authors using the editor. While the CMS developers like Drupal may make every effort to ensure the end user experience is fully accessible, they cannot fully control user generated content. As the editor manages which tags are added it can ensure a certain level of accessibility including WAI ARIA but authors can still make common accessibility errors, For example it&#8217;s easy to create a bad structure by skipping heading levels. Or the perennial chestnut forgetting to add an alt attribute to important pictures.</p>
<h1>CKEditor Accessibility Checker</h1>
<p>One solution to the problem of catching author errors is to provide a tool that authors can use to check their content before they submit it. This is the approach taken in the CKEditor Accessibility Checker plugin. While there are several HTML validation tools and services that could be used the quail checker</p>
<p>To try the Accessibility Checker I first played with the <a href="http://cksource.com/ckeditor/services#accessibility-checker">comprehensive sample</a> and then knocked up a little test. The sample provide some Wikipedia style content with 7 errors flagged by the <a href="http://quailjs.org/">Quail accessibility checker</a> used for validating the markup.</p>
<div id="attachment_553" style="width: 990px" class="wp-caption aligncenter"><a href="/openingaccessibility/wp-content/uploads/2015/05/a11yChecker.png"><img class="wp-image-553 size-full" src="/openingaccessibility/wp-content/uploads/2015/05/a11yChecker.png" alt="" width="980" height="620" srcset="/openingaccessibility/wp-content/uploads/2015/05/a11yChecker.png 980w, /openingaccessibility/wp-content/uploads/2015/05/a11yChecker-300x190.png 300w" sizes="(max-width: 980px) 100vw, 980px" /></a><p class="wp-caption-text">CKEditor Accessibility Checker screen shot</p></div>
<p>As can be seen, a dialog popup provides the user interface with button for Next and Prev error, an explanation of the issue which is also highlighted in the content. A triangle on one edge of the dialog also acts as a pointer to the problem.  All-in-all this is a good interactive experience for navigating and fixing issues. In addition, if the editor content is clicked to make a change the dialog shrinks down out of the way &#8211; a nice touch. Quick fixes are provided as extra javascript snippets in the sample code and make for an easy user experience. A complication here is that authors using CKEditor are intentionally insulated from the raw markup details so errors have to make sense with minimal reference to techy details and standards. I think a reasonable job has been done though some understanding of the underlying markup is required.</p>
<p>In order to get an experience of the effort involved in using the Editor and Accessibility Checker I created a simple webpage with some dodgey initial content for the editor. This shows how painless it is. In addition to the CKEditor initialisation and textarea  element replacement code, it is only required to include jQuery and declare use of the Accessibility Checker plug in.</p><pre class="crayon-plain-tag">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="utf-8"&gt;
  &lt;title&gt;CKEditor with a11yChecker&lt;/title&gt;
  &lt;meta name="description" content="CKEditor with a11yChecker "&gt;
  &lt;meta name="author" content="Steve Lee"&gt;
  &lt;script src="js/ckeditor/ckeditor.js"&gt;&lt;/script&gt;
  &lt;script src="js/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;main&gt;
    &lt;form&gt;
      &lt;textarea name="editor1" id="editor1" rows="10" cols="80"&gt;
            &lt;h2&gt;H2 Heading&lt;/h2&gt;
            &lt;h4&gt;H4 naughty as skipped h3&lt;/h4&gt;
            &lt;p&gt;No alt attribute on this &lt;img src='img/noalt.jpg' /&gt;&lt;/p&gt;
            &lt;table&gt;&lt;tr&gt;&lt;td&gt;whoops no th&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
            &lt;p&gt;&lt;span style="background-color:darkgray; color:gray"&gt;Can you read this?&lt;/span&gt;&lt;/p&gt;
        &lt;/textarea&gt;
        &lt;script&gt;
          CKEDITOR.replace( 'editor1', 
                              {extraPlugins: 'a11ychecker'}
                              );
        &lt;/script&gt;
    &lt;/form&gt;
  &lt;/main&gt;
&lt;/body&gt;
&lt;/html&gt;</pre><p>Note that the checker makes an XHR call to Quail so the sample had to run from a server, not file:///.  An easy way to do that is with nodejs and hapi configured as a simple static server. I also used the new <a href="https://code.visualstudio.com/">Visual Studio code</a> editor to edit and run it. All in all that&#8217;s a nice easy and portable way to get a nodejs server up and running</p><pre class="crayon-plain-tag">var Hapi = require('hapi');

// Create a server with a host and port
var server = new Hapi.Server();
server.connection({ 
    host: 'localhost', 
    port: 3000 
});

// Add a route for a simple static file server
server.route({
    method: 'GET',
    path: '/{param*}',
    handler: {
        directory: {
            path: 'public',
            index: true
        }
    }
});

server.start();</pre><p>While the first three accessibility errors in my dodgy markup were found the contrast fail was not, even though this is listed in the Quail documentation. I checked with <a href="http://www.paciellogroup.com/resources/wat/">TPG&#8217;s WAT</a> to ensure it was indeed a WCAG AA and AAA fail. I tried adding it as a new CKeditor style but that made no difference. Perhaps Quail does not map the colour names to values? I assume it works with inline styles. I didn&#8217;t spend anymore time investigating this.</p>
<p>Some errors are no doubt hard to find as the editor contents are one part in a larger page context. If the wider page context is ignored then some structural errors will not be found. The edit page context is likely to be different to the view one.  Also, if the same content is used in several page contexts the structural integrity may vary.</p>
<h1>Final Thoughts</h1>
<p>The Accessibility Checker plugin is a good solution for ensuring user supplied content is accessible or otherwise checking in browser edited markup. The UX is good, though I did not check the accessibility of the UX itself. Quail is a good open source accessibility validator, is configurable and supports <a href="http://quailjs.org/#/guidelines">test for both WCAG and Section 508</a>. The Accessibility Checker documentation claims it can be used with others checkers so perhaps it would work with Tenon.io, though that requires a subscription. The Quick fix feature make it even easier for authors to use</p>
<p>Currently Accessibility Checker is a commercial offering from CKSource but they said they plan to make it open source under GPL, like CKEditor itself.  I see there is a Drupal plugin for using CKEditor so no doubt the Accessibility checker could be added as well, making Drupal even more accessible.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2015/05/ckeditor-accessibility-checker-for-content-authors/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
		</item>
		<item>
		<title>I&#8217;m liking Microsoft again</title>
		<link>/openingaccessibility/2015/05/im-liking-microsoft-again/</link>
		<comments>/openingaccessibility/2015/05/im-liking-microsoft-again/#respond</comments>
		<pubDate>Mon, 04 May 2015 13:07:58 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[web]]></category>
		<category><![CDATA[Windows]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=518</guid>
		<description><![CDATA[After watching the key notes and selected sessions from Microsoft #Build2015 over on Channel 9 I&#8217;m definitely liking Microsoft again. This new found affection is form largely from the perspective of a HTML developer and to some extent as an &#8230; <a href="/openingaccessibility/2015/05/im-liking-microsoft-again/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>After watching the key notes and selected sessions from <a href="http://channel9.msdn.com/Events/Build/2015">Microsoft #Build2015 over on Channel 9</a> I&#8217;m definitely liking Microsoft again. This new found affection is form largely from the perspective of a HTML developer and to some extent as an accessibility practitioner. To be honest this is a welcome pleasant surprise.</p>
<p><img class="alignnone" src="https://tse1.mm.bing.net/th?&amp;id=JN.EDqULxX2GYmt%2bs%2be97A0pg&amp;w=300&amp;h=300&amp;c=0&amp;pid=1.9&amp;rs=0&amp;p=0" alt="OSI logo with WIndows Logo superimposed on it." width="260" height="180" /><img class="alignnone" src="https://pbs.twimg.com/profile_images/438453169706635264/2qK0GYg6_400x400.png" alt="Microsoft Enable logo" width="195" height="195" /></p>
<p><img class="alignnone" src="http://i.telegraph.co.uk/multimedia/archive/03286/microsoftedge_3286133b.jpg" alt="Microsoft Edge browser logo" width="264" height="165" /><img class="alignnone" src="http://www.wp7.nl/wp-content/uploads/2013/07/visual_studio_tile.png" alt="Visual Studio logo" width="184" height="184" /></p>
<p>When I Started Windows 3.0 development back in the day (and with liberal help from Charles&#8217; Petzold&#8217;s excellent book), I soon figured Microsoft treated developers well, even courting them with shiny tech to explore and great communications (like MSDN magazine and then later with huge stacks of CDs).</p>
<p>This was the early phase of Microsoft corporate culture when they were still very much developer led. Admittedly, some of their products&#8217; usability suffered from this bias and quite rightly they changed structure. Later, I moved on from embedded development using MASM, and MS Visual C for PC deployments an eventually to MS Windows powered financial products. As a result of tweaking the UK SKU of MS Money I even managed to work for Microsoft on some MSN back end code as a &#8216;contractor&#8217; in Red West B, but that&#8217;s another story.</p>
<p>I started to focus on the intersection of web accessibility, where Microsoft had a limited user story, and open source, where they were largely seen as the face of the proprietary corporate enemy. That view was not helped by <a href="http://en.wikipedia.org/wiki/Open_Letter_to_Hobbyists">Bill Gates&#8217; famous open letter to hobbyists</a> which wound a lot of people up at the time and later. Boy have things changed!</p>
<p>Even though I really enjoyed working on Linux and the excellent accessibility features of Gnome 2 and Mozilla Firefox, I must admit I did keep using and developing on/for Windows. I created a number of small Windows based Assistive Technologies, including the popular <a href="http://fullmeasure.co.uk/powertalk/">PowerTalk</a> that automatically narrates PowerPoint presentations as you operate them. Powertalk uses Python to access the Office Object Model and drive SAPI speech syntheses. By the way, SAPI is one of many excellent technologies with powerful accessibility uses from the Microsoft Research stable. Another is Kinect.</p>
<p>Microsoft then entered what I see as the dark Balmer years and I largely moved away as user or developer. Even though my then business partner and strong Open Source community leader, Ross Gardler, was strongly not anti Microsoft. Actually, I eventual found out why Ross held that view as he left to joined <a href="https://msopentech.com/">Microsoft Open Tech</a>. At one point we did look at Windows 8 HTML hybrid development (WinJS + perhaps Cordova) but in those early times we hit issues that I could not easily figure out from the historically excellent MSDN documentation. Mind you, I had not yet found <a href="http://blogs.msdn.com/b/microsoft_press/archive/2014/04/08/free-ebook-programming-windows-store-apps-with-html-css-and-javascript-second-edition.aspx">Kraig Brochshmidt&#8217;s excellent free ebook</a> &#8211; a &#8220;must read&#8221; for any HTML development on Windows.</p>
<p>I must admit that at the time I felt that the move to Microsoft was going to be important for both Ross and Microsoft. After my experience from Build2015 I feel that&#8217;s reasonably well validated. Here&#8217;s why</p>
<ul>
<li>The clear overall impression from Build was that Microsoft have now adjusted their culture so they now <strong>embrace and engage</strong> open source communities. Those of you aware of  the more popular old criticisms of Microsoft will  know why I highlighted that :). In the process Microsoft have rediscovered a friendship with developers.  The dual C words of Community and Conversation seem to have almost become mantras, at least in the session I watched. Sure,they are doing this for business survival reasons, but it still rocks.</li>
<li>New developer tooling, including the excellent new <a href="https://code.visualstudio.com//">Visual Studio Code</a>, show energy in supporting popular open source tools and workflows used by those outside of the Microsoft way. This is especially true in the web and HTML app space as I saw demos of nodejs, Bower, Gulp, Cordova, Angular, backbone and more. Plus Microsoft&#8217;s own  <a href="https://dev.windows.com/en-us/develop/winjs">WinJS framework</a> works with Angular and other frameworks. And, oh did I, <strong>really</strong> see those Angular devs in a Build presentation!?</li>
<li><a href="http://www.microsoft.com/en-us/windows/browser-for-doing">Edge</a> is so obviously the new browser on the block from a standards point of view. If you recall why Mozilla Firefox was started you realise that is a most welcome result. We&#8217;ve recently been seeing Microsoft engage with W3C and other groups to great effect. Even if sometimes they want to push things in different directions to others, for example ORTC rather than webRTC, they are taking an active part, unlike some others whom I won&#8217;t mention. Also the the F12 tooling has some great innovative features, including the ability to attach to embedded webviews. This &#8216;joining in&#8217; even includes key bindings &#8211; as I honestly heard the presenter saying &#8220;why be different to others for no good reason?&#8221;.</li>
<li>The new developer paths to and from Android and iOS are also impressive. As is the support of hosted apps and win32 apps in the appstore. Microsoft are obviously keen to get everyone on their Windows/Azure platforms.</li>
</ul>
<p>The other reason I find I&#8217;m liking Microsoft again is their approach to supporting the plethora of devices, form factors and input modes that we now face. Universal Apps, the flexible input platform and Continuum act together to provide the basics for a smooth cross platform (device) and accessible experience for users.</p>
<p>For example plugging a keyboard into my Android ASUS transformer tablet just didn&#8217;t work well enough so I gave up. Windows controls support mouse, touch, keyboard and even pen and games controller. With Continuum you can plug a mouse, keyboard and HDMI monitor into a suitable phone and get a near desktop experience.</p>
<p>The flip side of this flexibility is a boost in accessibility. The previously mentioned paths between other developer platforms, including their own, strengthen this considerably. My strong impression is that Microsoft have the best, if not unique, story here and it will only get better.</p>
<p>Definitely not your mom&#8217;s Microsoft. I&#8217;m looking forward to watching this unfold&#8230;</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2015/05/im-liking-microsoft-again/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Symbols for AAC using SVG and a RESTful web API</title>
		<link>/openingaccessibility/2015/03/mulberry-symbols-for-aac-svg-and-apis/</link>
		<comments>/openingaccessibility/2015/03/mulberry-symbols-for-aac-svg-and-apis/#comments</comments>
		<pubDate>Sun, 29 Mar 2015 18:09:43 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[Apps]]></category>
		<category><![CDATA[Assistve Technology]]></category>
		<category><![CDATA[AAC]]></category>
		<category><![CDATA[Symbols]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=490</guid>
		<description><![CDATA[A good few years ago I hooked up with Garry Paxton who needed some development support for a charity website.  He had created straight-street.com to provide Speech and Language Therapists access to a new and freely available symbol set. Symbols &#8230; <a href="/openingaccessibility/2015/03/mulberry-symbols-for-aac-svg-and-apis/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>A good few years ago I hooked up with Garry Paxton who needed some development support for a charity website.  He had created <a href="http://straight-street.com/">straight-street.com</a> to provide Speech and Language Therapists access to a new and freely available symbol set. Symbols such as this Mulberry symbol set are vitally important for people with communication difficulties &#8211; such as an <a href="http://www.communicationmatters.org.uk/">inability to speak</a>. But often, like much in the AT world, proprietary symbols are expensive and so can be out of reach of many who would really benefit form them.</p>
<p>While this work was carried out a few years ago I felt it should be documented and will hopefully inspire others to innovate.</p>
<p><a href="http://straight-street.com/media/symbols/EN/svg/communication_aid.svg"><img class="alignnone" src="http://straight-street.com/media/symbols/EN/svg/communication_aid.svg" alt="Communication device" width="205" height="205" /></a><a href="http://straight-street.com/media/symbols/EN/svg/communication_board.svg"><img class="alignnone" src="http://straight-street.com/media/symbols/EN/svg/communication_board.svg" alt="Communication chart" width="207" height="207" /></a><img class="alignnone" src="http://straight-street.com/media/symbols/EN/svg/hello.svg" alt="Man waving hello" width="191" height="191" /></p>
<h1>Open symbols</h1>
<p>Garry&#8217;s goals for the symbols and website included</p>
<ul>
<li><strong>Provide an alternative symbol set</strong> for older users as available sets were largely aimed at children. This required extra &#8216;adult&#8217; symbols and a more appropriate style.</li>
<li><strong>Promote innovation in symbol availability and use</strong> by allowing symbols to be freely used, shared, modified and accessed on the web. All symbols sets at the time had proprietary licences and often required a licence per use on a single PC. This was felt to be a serious barrier to users getting free access to critical communication aids they need. Personally I think that the majority of symbol set owners were behind the times as far as the technical possibilities were concerned and so users were missing out.</li>
<li><strong>Demonstrate how symbols can be accessed</strong> in modern web apps through an API. This included providing an API to access symbols, a basic test App and also a protoype symbol chart maker app.</li>
<li><strong>Provide a strong design workflow</strong> for the symbols so they have consistent style (even though permissive licence allows for derived works).</li>
<li><strong>Encourage community</strong> suggestions for and review of symbols.</li>
<li><strong>Allow easy access</strong> to entire symbols set or just a sub set based on criteria such as topic (eg &#8216;food&#8217;)</li>
</ul>
<p>I think most of these goals were reached by Garry and the team, despite being a little ahead of the curve technically. API usage and general SVG support were nowhere as well developed as they are now. Perhaps most importantly this was disruptive as far as symbol set owners and developers who used them were concerned. We see several web uses of symbols (eg hover over words on <a href="http://www.communicationmatters.org.uk/">commmunicationmatters.org.uk</a>) and a few free or otherwise better licensed symbol sets have become available. Currently the Mulberry symbols are used in many apps (native and web), though some people appear to be abusing the very permissive <a href="http://creativecommons.org/licenses/by-sa/2.0/uk/">CC BY-AT licence</a>. Unfortunately Garry&#8217;s charity funding dried up and so it was closed at the point the current 3,000 odd symbols were finished. <strong>Note to anyone interested in picking up on this &#8211; Garry would love to see the symbol development work resume.</strong></p>
<blockquote><p>To see a fairly random selection of symbols go to  <a href="http://straight-street.com/gallery.php">straight-street.com</a> and click on &#8220;Search&#8221;. You can mouse over the symbols to get a larger preview.</p></blockquote>
<h1>SVG</h1>
<p>I loved the symbols and Garry&#8217;s aims  in terms of open accessibility so I quickly offered to help fix the website problems. I made several suggestions, in particular using SVG as an alternative to the  WMF (Windows meta format). WMF made sense for use in installed apps as most users had Windows PC programs that only support WMF. It&#8217;s scalable but rather crude, requiring considerable hand editing of exports from Adobe Designer (used to create the symbols). In addition, due to security problems Microsoft pulled the explorer support for showing thumb nails, thus reducing their general utility.</p>
<p>I was well aware of the advantages of SVG as a mature scalable format and open standard. I hoped it would soon &#8216;break&#8217; into mainstream, something that is only just happening now, some 5 years on, largely I suspect as a result of the need for responsive images.</p>
<p>Seeing I was promoting SVG to Garry as the web-friendly format for use on the web I needed to prove it could be easily used in webs apps for symbols. This proved to be basically the case though the test app is a little more complex then expected.</p>
<div style="width: 152px" class="wp-caption alignleft"><a href="http://straight-street.com/media/symbols/EN/svg/baker_1b.svg"><img class="" src="http://straight-street.com/media/symbols/EN/svg/baker_1b.svg" alt="Man wearing bakers clothing and a loaf of bread" width="142" height="142" /></a><p class="wp-caption-text">Baker</p></div>
<div style="width: 48px" class="wp-caption alignleft"><a href="http://straight-street.com/media/symbols/EN/svg/briefcase_2.svg"><img src="http://straight-street.com/media/symbols/EN/svg/briefcase_2.svg" alt="Briefcase" width="38" height="38" /></a><p class="wp-caption-text">Briefcase</p></div>
<div style="width: 309px" class="wp-caption alignleft"><a href="http://straight-street.com/media/symbols/EN/svg/bath_animal_,_to.svg"><img class="" src="http://straight-street.com/media/symbols/EN/svg/bath_animal_,_to.svg" alt="person bathing a dog in a tub with a sponge" width="299" height="299" /></a><p class="wp-caption-text">bath_animal_,_to</p></div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>Fortunately, that has now changed with improved SVG support in browsers. The biggest breakthrough is the support of SVG files in &lt;img&gt; tags &#8211; hurrah! To prove the point, you should be able to see above various the in differing sizes using an &lt;img&gt; tag (and you can click on them for a larger scaled image). These were added to WordPress using the &#8220;embed from URL&#8221; option without any special effort. Now symbols can easily be displayed in web apps without using awkward markup such as <span class="pl-s">&lt;object type=&#8221;image/svg+xml&#8221; data=&#8221;URL<span class="pl-pds">&#8220;</span></span><span class="pl-s">&gt; and feature testing code</span>.</p>
<p>As an aside, for the straight-street.com site we didn&#8217;t use SVG. Rather we used 2 sizes of png (originally giff) for thumbnail and preview images. Plus the user can download zips of all the symbols in WMF, SVG and a size of png. All rather messy.</p>
<h1>API</h1>
<p>For the API design I researched best practice but found little solid wisdom available at that time. Still, I&#8217;m reasonably happy with the design, though no doubt it could be done much better now, especially as we have a good body of experience and examples (though I must say &#8220;both good and bad&#8221;). At the time, having just read <a href="https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">Roy Fielding&#8217;s dissertation</a> I was keen to use a self describing discoverable REST style returning JSON with further URLs embedded.  This is perhaps closer to the <a href="https://sites.google.com/site/restframework/hypermedia-controls">hypermedia controls</a> approach rather that the alternative <a href="http://apiux.com/2013/04/09/rest-metadata-formats/">metadata formats</a> which seem to be currently slugging it out for dominance (and interestingly I see Microsoft have standardised on <a href="https://github.com/swagger-api/swagger-spec/blob/master/versions/1.2.md">Swagger Metadata</a> for Azure as most popular metadata). For our API we only require GET, at least as the API stands, which makes life much simpler in terms of API design and implementation.</p>
<blockquote><p>Here&#8217;s an example request to get all symbols with name or tag containing &#8216;sweet&#8217;</p>
<p><a href="http://straight-street.com/api/symbols/EN/sweet?appid=SSApiUsage">http://straight-street.com/api/symbols/EN/sweet</a> &#8211;</p>
<p>The API&#8217;s home page <a href="http://straight-street.com/api">straight-street.com/api</a> provides details usage information. And a small interactive test applications is provided at <a href="http://straight-street.com/api/test.html">straight-street.com/api/test.html</a></p></blockquote>
<p>For implementation I initially used Python which was a joy to write (as always) but as our free hosting only provided CGI is was REALLY slow. I therefore reimplemented it in PHP using a rather obscure light weight MVC framework for routing (<a href="http://doophp.com/">DooPHP</a>). This is reasonably fast. When it comes to a rewrite I&#8217;d no doubt use node.js + hapi or perhaps Python&#8217;s  Flask. In addition <a href="http://json-schema.org/latest/json-schema-hypermedia.html">JSON Hyper-Schema</a> looks like a good spec and tools to use.</p>
<h1>Conclusion</h1>
<p>Despite being a little ahead of the accessibility and web curve I think we managed a very reasonable first product implementation. Web support has moved on so far and fast that I&#8217;ve no doubt the web site, api and samples apps could be easily recreated and be in much better shape.</p>
<p>We&#8217;d love for symbol users to get access to these symbols in a wide range of innovative on-line and web apps. We&#8217;d also like to see many more symbols being added to make this a comprehensive set with excellent utility. Perhaps most importantly we&#8217;d love to see a community grow around these symbols to ensure sustainability.</p>
<p>We&#8217;ve put the Mulberry symbols, the API source and website source on GitHub in the <a href="https://github.com/straight-street">straight-street organisation</a>. I don&#8217;t really recommend looking at the website code &#8211; it has a strange history <img src="https://s.w.org/images/core/emoji/11/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>If this resonates with you at all and you have access to funding and/or development time then please do talk to us.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2015/03/mulberry-symbols-for-aac-svg-and-apis/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>CSUN15</title>
		<link>/openingaccessibility/2015/03/csun15/</link>
		<comments>/openingaccessibility/2015/03/csun15/#respond</comments>
		<pubDate>Tue, 10 Mar 2015 22:27:23 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=469</guid>
		<description><![CDATA[After a 5 year gap I returned to the CSUN conference and for the 30th celebration no less. I have always enjoyed CSUN as a great place to meet up with accessibility and Assistive Technology people as well as soaking &#8230; <a href="/openingaccessibility/2015/03/csun15/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>After a 5 year gap I returned to the CSUN conference and for the 30th celebration no less. I have always enjoyed CSUN as a great place to meet up with accessibility and Assistive Technology people as well as soaking in the latest developments and trends. This year was no exception. Indeed, I had the most fantastic time catching up with old friends and making new friends. My key takeaways were Cognitive is finally on the agenda plus Math on the web and Braille has arrived at last.</p>
<p>I&#8217;d like to extend a huge &#8220;Thank you&#8221; to Gregg Vanderheiden for getting me out to San Diego as part of the Raising the Floor team presenting GPII. Here&#8217;s my main recollections.</p>
<ul>
<li><strong>30th CSUN celebrations</strong>. Entertaining, with several excellent professional entertainers (and <a href="https://www.facebook.com/video.php?v=10205431050471266&amp;pnref=story">some not so professional</a>) all having a go to celebrate and acknowledge the achievement of Harry Murphy who launched CSUN.</li>
</ul>
<p><a href="/openingaccessibility/wp-content/uploads/2015/03/11034045_841286355936654_7130492149634637176_n.jpg"><img class=" size-full wp-image-476 aligncenter" src="/openingaccessibility/wp-content/uploads/2015/03/11034045_841286355936654_7130492149634637176_n.jpg" alt="Harry Murphy holding at 30 sign" width="621" height="414" srcset="/openingaccessibility/wp-content/uploads/2015/03/11034045_841286355936654_7130492149634637176_n.jpg 621w, /openingaccessibility/wp-content/uploads/2015/03/11034045_841286355936654_7130492149634637176_n-300x200.jpg 300w" sizes="(max-width: 621px) 100vw, 621px" /></a></p>
<ul>
<li><strong>GPII, Cloud4All &amp; Prosperity4All</strong> &#8211; In addition to <a href="%20http://tinyurl.com/GPII-CSUN-2015 ">our slides</a> we presented the Library demo of two all-in-one devices running the GPII Auto Personalisation from Preferences. With a photo and card to represent each user who logged in via a NFC &#8216;tap&#8217; action the device automatically ran required AT and a11y options for each user&#8217;s preferences. Unfortunately not many people attended this, but I did find that most people I spoke to were aware of the GPII, if not that it is actually a working prototype now.</li>
<li><strong>Project:Possibility&#8217;s SS12 finals</strong>. Having attended 2 years of the European SS12 (or C4C as it is now known) it was great to be back at the US event, led with amazing efficiency by Sean Goggin (even whilst he was preparing the CSUN conference itself). This year&#8217;s CSUN and USC teams had developed great games their presentations were so close I was glad not to be judging. The winning <a href="https://www.facebook.com/ProjectPossibility">CSUN team</a>&#8216;s steering race  game, while simple was designed for sound only feedback.  A big thanks to our Judges Mike Pacelo, Peter Korn and Jennison Asuncion who each gave great advice to the teams before announcing the winners</li>
<li><strong>Presentations</strong> &#8211; I attend quite a few this year, but as always the real value is chatting to people. Highlights for me include
<ul>
<li>Henny Swan, <a href="http://www.iheni.com/secret-life-of-an-accessible-media-player/">Secret Life of an Acessible Media Player</a> about the design of the BBC iplayer.</li>
<li>Jamie Knight, <a href="https://medium.com/@dennisl/cognitive-accessibility-101-by-jamie-and-lion-at-csun15-4cd2e8512c8a">Cognitive accessibility 101</a> with some really valuable insights and a great talk. Jamie has kindingly offered to talk to us in the <a href="http://www.w3.org/WAI/PF/cognitive-a11y-tf/">W3C Cognitive Accessibility Task Force</a> during our F2F at the BBC. Do catch one of Jamie&#8217;s presentations if you can, they are refreshing, fun and informative. [<strong>Update</strong> &#8211; Jamie has since <a href="http://jkg3.com/Journal/cognitive-accessibility-101-part-1-what-is-cognitive-accessibility">blogged on his talk</a> in part 1 of 3]</li>
<li>The <a href="https://www.youtube.com/watch?v=C-dF__0SpMk">Open Source accessibility panel</a>. Five years ago I gave a talk at CSUN 2010 on open accessibility so it was awesome to see this panel and other related talks  about open access tech.</li>
<li>Hans Hillen and Léonie Watson,  <a href="https://dl.dropboxusercontent.com/u/573324/presentations/CSUN2015/INotifier/index.html">Interaction Notifier: Making RIA Interaction Understandable to Everyone</a>. Designed to add context sensitive keyboard help to web apps this interests me greatly for use in providing structured support text for cognitive and low digital literacy.</li>
</ul>
</li>
<li><strong>Web stuff</strong> &#8211; as Marco Zehe said in his pre CSUN blog post, the web is now very much a large part of the conference. Though it was a shame it did not have it&#8217;s own track. There was a session on Web components accessibility and I went to The WAI to Web Accessibility Education &amp; Outreach Update followed by an extra Future of WCAG meeting called by Judy Brewer. Interestingly, Richard Schwerdtfeger stated he felt &#8216;Personalisation&#8217; and &#8216;Contextualisation&#8217; were the hot topics to follow. Interesting because the GPII addresses both of these topics.</li>
<li><strong>Awards</strong> &#8211; Apart from SS12 mentioned above, I witnessed Mick Curran receiving the Deque Amaze award for NVDA from Preety and the honorees of the <a href="http://www.knowbility.org/v/news-detail/Knowbility-s-Community-Heroes-of-Accessibility-Honorees-Announced/7u/">Knowbility Community Heroes awards.</a> These included Jarrad Smith for Web AIM&#8217;s excellent learning resources, Molly Holzshlag for Lifetime Achievement and Steve Faulkner for being ever &#8220;mighty&#8221;.</li>
<li><strong>Service dogs</strong> &#8211; always soooo pet-able but working hard so you mustn&#8217;t. This year labs were not so numerous and I saw more GSDs and Collies.</li>
</ul>
<p><a href="/openingaccessibility/wp-content/uploads/2015/03/B_X0c1aUIAA-VJO.jpg"><img class="aligncenter size-full wp-image-477" src="/openingaccessibility/wp-content/uploads/2015/03/B_X0c1aUIAA-VJO.jpg" alt="Yello lab service dog lying patiently under chairs" width="600" height="376" srcset="/openingaccessibility/wp-content/uploads/2015/03/B_X0c1aUIAA-VJO.jpg 600w, /openingaccessibility/wp-content/uploads/2015/03/B_X0c1aUIAA-VJO-300x188.jpg 300w" sizes="(max-width: 600px) 100vw, 600px" /></a></p>
<ul>
<li><strong>Friends</strong> &#8211; I had an lovely time chatting to many folks and then hanging out with good friends over the weekend. Happy memories of touring the USS Midway aircraft carrier (and clambering through endless hatches),  watching Skydiving and reminiscing about bands (and chips) from &#8220;up norf&#8221;.</li>
<li><strong>Exhibition</strong> &#8211; not much to say really. I walked around it. Much like any year. Gregg and Amerish when round talking to many AT suppliers and demoing the GPII Automatic Personalisation from Preferences to see who would be interested in working with it. It seems all were keen and A1 Squared (of ZoomText &amp; now Windows Eyes) are also on board. Great work. Now the Tiger Team have to get going!</li>
<li><strong>Not so good</strong> &#8211; I left my phone at home so no pictures and I still haven&#8217;t seen the inimitable <a href="http://thevikingandthelumberjack.tumblr.com/">Viking and the Lumberjack</a> in action! Also Days Inn Harbour view breakfast is, with the exception of the orange juice, ultra naff. Finally, BA&#8217;s seating policies means it&#8217;s very hard to get seats with extra legroom; I got  lucky on the way out but not back.</li>
<li><strong>On the way home</strong> &#8211; Gareth Ford Williams recommend I watch <a href="http://www.imdb.com/title/tt2582802/">Whiplash</a>. I did and it is excellent &#8211; recommended if you like Jazz and don&#8217;t mind lots of swearing. Better yet &#8211; it&#8217;s not yet another a Hollywood bluckbuster (YAHB).</li>
</ul>
<p>CSUN &#8211; I hope to be there next year.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2015/03/csun15/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Cloud4All &#8211; providing automatic personalisation of access technologies</title>
		<link>/openingaccessibility/2015/02/cloud4all-providing-automatic-personalisation-of-access-technologies/</link>
		<comments>/openingaccessibility/2015/02/cloud4all-providing-automatic-personalisation-of-access-technologies/#comments</comments>
		<pubDate>Fri, 06 Feb 2015 13:14:12 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[Assistve Technology]]></category>
		<category><![CDATA[GPII]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=462</guid>
		<description><![CDATA[The Cloud4All project has just undertaken it&#8217;s important penultimate review with EC, something of a milestone for any FP7 project. This is a good time to take stock and see where the project is at. This especially true for Clou4All &#8230; <a href="/openingaccessibility/2015/02/cloud4all-providing-automatic-personalisation-of-access-technologies/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>The <a href="http://www.cloud4all.info/ ">Cloud4All</a> project has just undertaken it&#8217;s important penultimate review with EC, something of a milestone for any FP7 project. This is a good time to take stock and see where the project is at. This especially true for Clou4All which is not an end itself, rather it is developing the core infrastructure for Automatic Personalisation from Preferences feature for the International <a href="http://gpii.net/">GPII in`itiative</a>.</p>
<p>After 3 years of research and development I&#8217;m pleased to say we have a working system that not only clearly demonstrates the user experience of using a device with a number of access technologies configured for their best possible experience, but is also provides a flexible base for hardening into a widely deployable infrastructure.</p>
<p>In order for the GPII to be a success it <strong>must</strong> be easy for developers of access technology to get their (or other)  solutions working with the GPII. For example, as part of the Cloud4All project activity we have already enabled a wide range of tools on several platforms:</p>
<ul>
<li>Android
<ul>
<li>Audio, Accessibility, UI settings</li>
<li>Freespeech</li>
<li>TalkBack</li>
<li>eCTouch</li>
</ul>
</li>
<li>Linux
<ul>
<li>magnifier, various UI settings, keyboard settings, volume</li>
<li>Orca</li>
<li>Web Anywhere</li>
</ul>
</li>
<li>Windows
<ul>
<li>NVDA</li>
<li>Jaws</li>
<li>Read Write Gold</li>
<li>built-in magnifier, OSK, high contrast, mouse trailing, cursors</li>
<li>Web Anywhere</li>
<li>Sociable</li>
</ul>
</li>
<li>Web
<ul>
<li>Chrome browser (via a plugin)</li>
<li>JME Themes</li>
<li>SmartHouses</li>
</ul>
</li>
</ul>
<p>We are now getting ready to help 3rd party developers and <a href="http://wiki.gpii.net/w/Volunteer%27s_Emporium">volunteers </a>to adapt their accessibility solutions by providing information that developers will need. We&#8217;ve also set up a <a href="http://wiki.gpii.net/w/Imp_Tiger_Team">team to work on adding solutions</a> (operating under the name of the Tiger Team). In addition the related GPII project, <a href="http://www.prosperity4all.eu/ ">Prosperity4All</a>, will provide more new solutions that wok with the GPII.</p>
<p>As an example of why developers will want to integrate solutions and how easy it is I&#8217;ll relate the experience I had with getting <a href="http://maavis.fullmeasure.co.uk/">Maavis</a> to work with the GPII.</p>
<p>Maavis is an installed Windows application that provides a full screen ultra easy to use experience for people with dementia in a care environment. It provides access to media and communications and is not end user ready, rather it is both a prototype and a framework requiring configuration.</p>
<p>The benefits I perceived from having Maavis working with the GPII include</p>
<ul>
<li>Makes Maavis more easily available to people who will benefit from it</li>
<li>Provides mechanism to identify users who can not get on with login screens (user listeners like NFC)</li>
<li>Provides alternative and automated mechanism to change user configuration.</li>
<li>Help improve accessibility users general experience of accessing technology through automatic personalisation</li>
</ul>
<p>Plus, although it does not apply so much to Maavis, the GPII will also make it easy for users to discover the solutions that work best for them in conjunction with others tools, plus the best configurations of all these tools.</p>
<p>The developer experience of getting a solution working with the GPII is actual quite easy due to careful design and a preference for declarative syntax. As long as your application can be started and stopped and provides away to programatically change the settings it straight forward. Your main work is then to provide details of how to invoke these operations.</p>
<p>Here&#8217;s the <a href="https://github.com/GPII/universal/blob/master/testData/solutions/win32.json#L749-L782">example for Maavis</a> which stores it settings in a JSON file and so can use the GPII&#8217;s JSON settings converter. The GPII saves the user preferences for Maavis in a <a href="https://github.com/GPII/universal/blob/master/testData/preferences/maavis2.json">solution specific way </a>but there are standard terms and the developer can provide information about <a href="https://github.com/GPII/universal/blob/master/testData/solutions/win32.json#L149-L206">how to map between</a> the standard terms and their own settings.</p>
<p>If you are interested in getting your solution working with the GPII then take a look at this <a href="http://wiki.gpii.net/w/GPII_Core_Infrastructure">developer information</a> (currently on the wiki but will move to our main <a href="http://blogs.cloud4all.info/developers/">developer website</a>). You can also drop me a line at: stevelee [at] raisingthefloor [dot] org</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2015/02/cloud4all-providing-automatic-personalisation-of-access-technologies/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
		<item>
		<title>Help: I bricked my Firefox OS device by enabling the Accessibility Screen Reader!</title>
		<link>/openingaccessibility/2014/05/help-i-bricked-my-firefox-os-1-3-device-by-enabling-the-accessibility-screen-reader/</link>
		<comments>/openingaccessibility/2014/05/help-i-bricked-my-firefox-os-1-3-device-by-enabling-the-accessibility-screen-reader/#comments</comments>
		<pubDate>Thu, 22 May 2014 10:00:42 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[FirefoxOS]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=393</guid>
		<description><![CDATA[Well you would fiddle, wouldn&#8217;t you! 😉 The screen reader feature as introduced in Firefox OS 1.3 is experimental &#8211; hence it is burried away in the developer settings. If you are not familiar with mobile screen readers you will &#8230; <a href="/openingaccessibility/2014/05/help-i-bricked-my-firefox-os-1-3-device-by-enabling-the-accessibility-screen-reader/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Well you would fiddle, wouldn&#8217;t you! <img src="https://s.w.org/images/core/emoji/11/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>The screen reader feature as introduced in Firefox OS 1.3 is experimental &#8211; hence it is burried away in the developer settings. If you are not familiar with mobile screen readers you will find it difficult to turn it off once enabled, but it can be done if you learn a couple of new gestures. In 1.4, and beyond, the screen reader is more mature, easier to access and there is another way to toggle it on/off it using the volume up/down buttons.</p>
<p><strong>tl;dr if you&#8217;ve just selected &#8220;screen reader&#8221; then double tap &#8220;screen reader&#8221; again to unselect it. If you have 1.4 use the volume key toggle explained below; If you&#8217;ve been tapping and swiping on 1.3 and gotton yourself into a right old mess then you need to navigate back to the &#8220;screen reader&#8221; option first. Do this by swiping right or left <strong>to move the selection rectangle </strong>and double tapping to drill down into the settings. This is similar to using Tab, Shift+Tab and Enter on a desktop. There may be scrolling bugs so sometimes you may find you can&#8217;t see the rectangle but the speech should tell you where it is  (just like it supposed too).<br />
</strong></p>
<p>So how DO you turn it off? Well first you have to realise that the screen reader is designed for people with no or very impared vision. These users need a different way of interacting with the device that gives clear feedback on were they are in the UI. Thus speech indicates selected items in the UI and taps and swipes work differently to avoid accidently activating the wrong thing.</p>
<p>For the main gestures you might like to think of the touchscreen with the screen reader enabled as being a separate trackpad so there is no direct relationship with where you touch and what is on the screen at that point . Gestures can occur anywhere on the touch surface as follows.</p>
<ul>
<li><strong>Swipe left or right &#8211;</strong> selects the the next or previous item. One item is always selected and is shown with a focus rectangle drawn round it. This item is spoken about when it becomes selected.</li>
<li><strong>Double tap</strong> &#8211; activates the selected item, just as if you had tapped on it when the screen reader is inactive</li>
</ul>
<p>Thus you can move to any item and activiate it using these 2 gestures. For example between list items, in and out of nested lists, between icons on the home screen or select a checkbox. Just look for the item with the rectangle round it to see what will happen when you double tap anywhere on the screen.</p>
<p>Other screen reader gestures include:</p>
<ul>
<li><strong>Single press</strong> &#8211; selects item pressed. This alows random taps and provides orientation.</li>
<li><strong>2 finger swipe</strong> &#8211; scrolls up/down or left/right</li>
<li><strong>Audio preview</strong> &#8211; press and hold, then move fingure around so each item under the finger is selected and spoken.</li>
</ul>
<p>In Firefox OS 1.4 a new screen reader toggle on/off was introduced using the volume up and down buttons:</p>
<ul>
<li>Press volume up and volume down in succession 3 times (6 distinct presses).</li>
<li>Get a voice prompt</li>
<li>Press volume up and volume down in succession 3 times (6 distinct presses).</li>
</ul>
<p>See bug <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=957674">957674</a> for full details of this feature&#8217;s introduction.</p>
<p>[UPDATE 22/05/14] Marco Zehe added some screen reader operation notes to the <a href="https://developer.mozilla.org/en-US/Firefox_OS/Debugging/Developer_settings#Show_accessibility_settings">MDN Firefox OS Developer Settings documentation</a></p>
<p>[Update 2014-05-30] Added audio preview details.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2014/05/help-i-bricked-my-firefox-os-1-3-device-by-enabling-the-accessibility-screen-reader/feed/</wfw:commentRss>
		<slash:comments>32</slash:comments>
		</item>
		<item>
		<title>Revo Pixis RS internet/DAB/FM radio review</title>
		<link>/openingaccessibility/2013/11/revo-pixis-internetdabfm-clock-radio-review/</link>
		<comments>/openingaccessibility/2013/11/revo-pixis-internetdabfm-clock-radio-review/#comments</comments>
		<pubDate>Sat, 30 Nov 2013 14:27:41 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[age]]></category>
		<category><![CDATA[Audio]]></category>
		<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=303</guid>
		<description><![CDATA[I just received a shiny new Rivo Pixis RS digital radio direct from Revo and after using it for a short while I felt it definitely deserved a review. What follows is my initial impressions after setting it up and using &#8230; <a href="/openingaccessibility/2013/11/revo-pixis-internetdabfm-clock-radio-review/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>I just received a shiny new <a href="http://revo.co.uk/shop/pixis-ir/">Rivo Pixis RS</a> digital radio direct from Revo and after using it for a short while I felt it definitely deserved a review. What follows is my initial impressions after setting it up and using for a short period.</p>
<div id="attachment_304" style="width: 310px" class="wp-caption aligncenter"><a href="/openingaccessibility/wp-content/uploads/2013/11/RevoRSLoRes.png"><img class="size-medium wp-image-304" alt="Revo Pixis RS Radio - (source Revo website)" src="/openingaccessibility/wp-content/uploads/2013/11/RevoRSLoRes-300x225.png" width="300" height="225" srcset="/openingaccessibility/wp-content/uploads/2013/11/RevoRSLoRes-300x225.png 300w, /openingaccessibility/wp-content/uploads/2013/11/RevoRSLoRes.png 625w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">Revo Pixis RS Radio &#8211; (source Revo website)</p></div>
<p>When my old Pure Tempus DAB clock radio joined our other broken Pure radios I needed a replacement and was very reluctant to buy another Pure due to very real quality concerns. My requirements are actually simple, but it&#8217;s seemingly very hard to find a device that matches them. My wife and I have tried several brands and models over the recent years, all falling short in one way or another.</p>
<ul>
<li>Great sound &#8211; as a wannabe sound engineer / musician this matters a lot, even given DAB and Internet radio limitations. Both speech and music are required</li>
<li>Clear clock-display with sleep option &#8211; as an young older person my eyesight ain&#8217;t what it was</li>
<li>Low light levels &#8211; I want to sleep at night and some clock radios give you a sun tan at night</li>
<li>Easy use with customisable internet feeds and podcast selection</li>
<li>Reliability &#8211; after so many early failures I want something that goes on and on, yet can be updated with patches</li>
</ul>
<p>I&#8217;ve been aware of Revo for a few years and  liked the look and specification of the Pixis on &#8216;web&#8217;. Having Internet radio means I can listen to remote stations like KPLU along with those essential tech podcasts like FLOSS Weekly. Meanwhile, my wife can catch up on The Archers (hmm, maybe not such a positive after all). So I though the extra cost of the RS was worth it. Trouble was it was out of stock at all the usual suspects like Amazon so I called Rivo. The really friendly, helpful and knowledgeable person I spoke to reassured me it would meet my requirements and stated the Pixis RSs had just arrived at the warehouse and would soon be going out to the retailers. I grabbed one there and then, over the phone, and it arrived next day by UPS.</p>
<p>The Pixis is a complete doddle to set up with a serviceable wizard,In use is equally easy to operate. I&#8217;m pleased to say it meets all my requirements with ease, though the reliability and update ability have yet to be proven (note though, the external build quality is excellent).</p>
<p>The sound is great with a good driver and <a href="http://en.wikipedia.org/wiki/Bass_reflex">bass reflex</a> cabinet; I had to reduce the bass a tad as the default was a bit over the top for my taste. The clock is clear with the backlight level auto adjusted to room conditions and it can be reduced further, or even switched completely off in standby.  Even better most of my podcasts and internet stations of choice were already listed in the extensive Pixis lists.  Further the layout and navigation are both excellent. <strong>If your clock radio requirements match mine above then you need look no further the Pixis RS </strong>(and I guess the similar Pixis). It is the best design and implementation of a digital radio I have ever come across<strong>. </strong></p>
<p>That said, as usual, I have a few observations and thoughts that I&#8217;d like to pass on to Revo in the hope they are useful in improving and already great product.</p>
<p>Some time back I imagined what a good internet radio and associated web selection service would be like. This was before I have seen any consumer products, or perhaps before they existed. We eventually purchased a Logitech squeeze radio but this *really* sucks. The radio user experience is complex, buggy and just plain horrid, plus the service often goes down with no explanation. The Pixis however comes *really* close to my imagined ideal. OK, so having Open Source server software like Squeeze to play with is nice, but actually it&#8217;s not really needed, if ,as with the Pixis, interoperability standards like U<a href="http://en.wikipedia.org/wiki/Universal_Plug_and_Play">PnP </a>are supported for media streaming.</p>
<p>So what improvements would I like to see? Well very few.</p>
<ul>
<li>A bigger clock. It is small. Why not use the entire screen?</li>
<li>An option to turn off the backlight when listening, or at least when sleep is active.</li>
<li>Finer volume control at lower levels &#8211; the steps are slightly too course. Perhaps a different non-linear law like the old volume &#8216;pots&#8217;?</li>
<li>A top level favourites mode that aggregates all the others. It&#8217;s OK to have favourites for each mode, (though both internet station and podcasts is fiddly) and find station by media makes sense. However, for favourites your don&#8217;t care which media they are on, you just want to access them.</li>
<li>Bigger sleep UI buttons. When your are half asleep and want to extend sleep it&#8217;s a bit too small.</li>
<li>Sleep to remember the previous time used &#8211; shouldn&#8217;t need to set it every time.</li>
<li>Search through podcast lists. It&#8217;s great having podcasts listed under each station but the BBC R4 lists is very long and a search would be really useful.</li>
</ul>
<p>That&#8217;s all I have on my wish list. Even after a very brief time using the Pixis RS I&#8217;m stuck by it&#8217;s great design.. However, as accessibility and ageing are my area of interest I&#8217;ll add a couple more comments.</p>
<p>Older users, including those with age related visual and dexterity problems, or even those with dementia, would benefit from a slightly modified UI to have larger text and buttons and possibly a slightly simplified navigation. Spoken feedback would help too. That said, the Revo is great in this respect, the main issue is the small text in lists.</p>
<p>In addition, unlike radios with real buttons, touch screens are not accessible to people who are blind or have low vision. However, being software based, it should be easy to add speech synthesis and auditory touch browsing, as in Apple&#8217;s iOS VoiceOver or Android Eyes-Free facilities, both of which are built into mobile phones. This would increase Revo&#8217;s potential market considerably.</p>
<p>So in summary the Revo is an near-perfect radio for my use as a clock radio and my experience with Revo people has also been exceptionally pleasant. I&#8217;d love to have more contact with them.</p>
<p>[UPDATE: 2013/11/30] with media streaming the Pixis is listed as &#8216;Unknown Device&#8217; in Windows Media Player Streaming options device list. Otherwise streaming from PC just works. I&#8217;ve been advised by Revo that this will be fixed</p>
<p>[UPDATE 2013/12/01] After a couple of nights use one considerable weakness has become apparent when using the Pixis as clock radio; the clock display is not shown unless the Pixis is turned &#8216;off&#8217;. Well, it is, but it&#8217;s very small in top left corner. To be fair the Pixis is not advertised as a clock radio, but it would be ideal as one if a solution is found. 2 potential solutions occur; a top level icon to manually display the clock or a setting to give time display priority so it automatically displayed, perhaps after a timeout. A work around is to simply turn it off to read the time: it picks up from where it was  when turned back on.</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/11/revo-pixis-internetdabfm-clock-radio-review/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
		</item>
		<item>
		<title>Apple again raise the accessibility bar with OS X switch control</title>
		<link>/openingaccessibility/2013/10/apple-again-raise-the-accessibility-bar-with-os-x-switch-control/</link>
		<comments>/openingaccessibility/2013/10/apple-again-raise-the-accessibility-bar-with-os-x-switch-control/#comments</comments>
		<pubDate>Thu, 24 Oct 2013 10:07:13 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[OS X]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=281</guid>
		<description><![CDATA[One of the least promoted features in the Mavericks release of OS X, but in my view one of the most important, is the built-in switch access. Why? Well, one of the least supported group of people are those who &#8230; <a href="/openingaccessibility/2013/10/apple-again-raise-the-accessibility-bar-with-os-x-switch-control/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>One of the least promoted features in the Mavericks release of OS X, but in my view one of the most important, is the built-in switch access. Why? Well, one of the least supported group of people are those who rely on simple switch devices operated with limited gestures in order to interact with technology. Connecting switches is now less of a problem than it was with USB now a standard. Previously, hardware mods were required thus invalidating warranty, if at all possible. Also newer switch connectivity solutions for mobile devices like <a href="http://komodoopenlab.com/tecla/">Tecla</a> have arrived. Still, lack of built-in software control this has meant a limited choice of software that directly supports switches (eg <a href="http://www.oneswitch.org.uk/">a few games</a>) or specialist third party switch access software.</p>
<p><a href="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch1.jpg"><img class="size-medium wp-image-287 alignleft" title="Switched on and ready to go" alt="A Mac laptop with a bigh yellow switch connected" src="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch1-300x169.jpg" width="300" height="169" srcset="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch1-300x169.jpg 300w, /openingaccessibility/wp-content/uploads/2013/10/OSX_switch1-1024x577.jpg 1024w" sizes="(max-width: 300px) 100vw, 300px" /></a>As with VoiceOver, the built-in assistive technology that enables blind people to access OS X and iOS devices, switch access in these OSs means consumer kit is now more easily available to those who really need it. Plus, of course there is the usual so called &#8216;curb-cut&#8217; benefit to us all when we may find it useful in unexpected circumstances (eg triggering behaviour with a wired remote control when other means are not possible).</p>
<h2>Who uses switches and how?</h2>
<p>People with severely restricted mobility often have limited ability to make fine and/or course gestures and so are unable to operate a mouse, keyboard or touch device with any degree of accuracy. This obviously excludes interaction with most tech these days. For these people, a range of mechanical switch devices and associated assistive technology software provide alternative access through very basic gestures. Such gestures include press/release a big button, suck or blow on a straw and in the case of Stephen Hawkins, twitch a cheek muscle to operate a sensitve switch. Another related technology is eye gaze which tracks a user&#8217;s eye movements in order to control a pointer or selection on a device</p>
<h2>How does switch access work?</h2>
<p>As with screen readers for the blind, software is needed to convert between expected user interface interactions and what the operator wants to use. Generally, switch access focusses on input control, though as users may also need visual support speech feedback is often also provided.</p>
<p><a href="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch2.jpg"><img class="alignleft" title="OSK with row group selection" alt="Close up of OSK showing row group selection" src="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch2-300x169.jpg" width="300" height="169" /></a></p>
<p>As input gestures are greatly limited the interaction &#8216;events; are greatly simplified, often to  &#8216;next item&#8217; and &#8216;select item&#8217;. This leads to so called &#8216;scanning&#8217; when the input focus is moved from one item to the next until one is eventually selected by the user. As you can imagine this makes operation of an user interface or entering text <strong>extremely tedious</strong>! A number of scanning &#8216;modes&#8217; aim to alleviate this to some degree and also match user capabilities. Such modes include &#8216;auto scanning&#8217; where the cursor moves continuously and &#8216;group scanning&#8217; where groups of items are selected rather than each item in turn. However, this is an area that cries out for research and innovation!</p>
<p>Traditionally, the user experience has been with a simple grid of items that can be selected. Movement from one item to the next in a grid provides simple linear access suitable for limited gestures Compare this to the more random access a pointer or keyboard. Grids are either a complete replacement user interface, as in the excellent <a href="http://www.sensorysoftware.com/thegrid2.html">Grid 2</a>, or an overlay that lies on top of main UI, in the same manner as On Screen Keyboards (OSKs) now familiar from touch devices.</p>
<p><a href="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch3.jpg"><img class="alignleft" alt="Close up of Mac screen showing in application scanning selection" src="/openingaccessibility/wp-content/uploads/2013/10/OSX_switch3-300x169.jpg" width="300" height="169" /></a>Another approach is direct in-application access, something I experimented with a few years back with Mozilla Firefox in a project called Jambu.  A further, example can be found in <a href="http://www.oatsoft.org/Software/SpecialAccessToWindows/">Special Access to Windows</a>, In this mode a selection marker (blue rectangle in the photo) is drawn directly around items in the interface, such as buttons or menu items. This indicates they have the input focus and can be selected. The movement is then between items, both across groups and within groups, providing a more immediate, less indirect user experience when compared to a grid.</p>
<p>You can lean more about switch access in <a href="http://www.ace-centre.org.uk/assets/Product%20Downloads/SwitchScanningMaster_8_472.pdf">&#8216;Switch access to technology&#8217;</a>, a free pdf by David Colven and Simon Judge, available from the Ace Centre.</p>
<h2>What have Apple added to OS X?</h2>
<p>After a quick play with the new switch control options (available in system preferences -&gt; accessibility) it&#8217;s clear that Apple have done an excellent job and cover most requirements. The support allows full control of the UI and text entry, plus switch access to log-in is possible. By the way, switch access landed in iOS 7 a while back and while I haven&#8217;t tried it it appears similar from the <a href="http://www.spectronicsinoz.com/blog/apps-and-mobile-learning/accessibility-and-access/switching-it-up-in-ios-7/">blogs I&#8217;ve looked at</a>.</p>
<p>As you can see in the first photograph, I plugged in a single button to a USB port using a  <a href="http://www.sensorysoftware.com/Joycable.html">Joy Cable</a> converter. Out-of-the-box, the default settings worked well providing usable auto scan once I had identified my switch  (by pressing it) and assigning it an action. The space bar is treated as a switch and give an action of &#8216;select item&#8217; by default. Some normal access was required to set up the options but once configure operation was perfectly possible with just a switch. Though, admittedly, I performed limited testing.</p>
<p>A wide range of options are available and cover differing numbers of switches and scan modes. A home panel grid overlay provides user access to a range of interaction modes. Overlays are provided for pointer control and an On Screen Keyboard. Further custom overlay designs can be built with an editor. Further more, In-application scanning is provided and works well, though I had some issues getting to it from the main panel with my single switch. Other options such as speaking items with the TTS voice enhance the experience.</p>
<p>So all-in-all this is another fantastic addition to accessibility from Apple. Once again, Apple have led the way on this. Windows has had basic switch support via games controllers for years, but no built in accessibility support, other than the OSK. Linux (GNOME) has had GOK and Caribu for a while but no in-application access. Let&#8217;s hope other desktop, and more importantly, portable, OSs follow Apple&#8217;s lead here.</p>
<h2>A note for for developers</h2>
<p>As with VoiceOver, the switch access used Apple&#8217;s Accessibility APIs to provide access and applications must be written to correctly support this and so be accessible. If you are a developer you should use best practices and either stick to built in controls, or be very clear on how to make custom controls fully accessible. The benefit is more users for you programs an apps. AT developers will find that unfortunately the Accessibility APIs are not very open so creating 3rd party AT support is as easy as it should be.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/10/apple-again-raise-the-accessibility-bar-with-os-x-switch-control/feed/</wfw:commentRss>
		<slash:comments>14</slash:comments>
		</item>
		<item>
		<title>Screencast of Maavis and Cloud4All integration</title>
		<link>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/</link>
		<comments>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/#respond</comments>
		<pubDate>Tue, 23 Apr 2013 09:33:50 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[dementia]]></category>
		<category><![CDATA[opena11y]]></category>
		<category><![CDATA[opensource]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=138</guid>
		<description><![CDATA[I finally put up a short screencast of Maavis in use. This also demonstrates how integration with Cloud4All provides automatic personalisation of settings based on a token that identifies the user. Cloud4All is an EU project that is implementing part &#8230; <a href="/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>I finally put up a short screencast of <a href="http://maavis.fullmeasure.co.uk/">Maavis</a> in use. This also demonstrates how integration with <a href="http://www.cloud4all.info/">Cloud4All</a> provides automatic personalisation of settings based on a token that identifies the user. Cloud4All is an EU project that is implementing part of the <a href="http://gpii.net/">GPII</a> personalisation infrastructure.</p>
<p><iframe width="640" height="360" src="http://www.youtube.com/embed/F1ATPYSv02Y?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>To record I used <a href="http://camstudio.org/">CamStudio </a>on Windows and the slight echo seems to be a result of turning on preview of the microphone in Windows and using the CamStudio option of recording from &#8216;speakers&#8217;. This allowed both my voice and Maavis synthetic speech to be mixed and recorded. You get a slight delay in hearing your voice as you record, no doubt due to double latency, but I found I got used to it.</p>
<p>I also made life a little harder for myself as Maavis and Cloud4All are running in a Virtual Machine (using the VMWare player). Running CamStudio in the same VM killed the response and Maavis took forever to run. So I ran CamStudio in the Host OS and recorded the VM window.</p>
<p>YouTube thought I was using widescreen, which I was not. This may have been because I had not full screened the VM window so the hight was reduced. However I also have my Windows TaskBar on the left whic halso reduces the widht. Who knows, I don&#8217;t think it has any practical effect.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
