<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>opena11y &#8211; Opening Accessibility</title>
	<atom:link href="/openingaccessibility/category/opena11y/feed/" rel="self" type="application/rss+xml" />
	<link>/openingaccessibility</link>
	<description>Where open source joins accessibility</description>
	<lastBuildDate>Thu, 30 Mar 2017 10:26:12 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.8</generator>
	<item>
		<title>BBC publish draft mobile accessibility guidelines to address developer &#8216;assumptions&#8217;</title>
		<link>/openingaccessibility/2013/06/bbc-publish-draft-mobile-accessibility-guidelines-to-address-developer-assumptions/</link>
		<comments>/openingaccessibility/2013/06/bbc-publish-draft-mobile-accessibility-guidelines-to-address-developer-assumptions/#respond</comments>
		<pubDate>Wed, 19 Jun 2013 10:10:03 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[mobile a11y]]></category>
		<category><![CDATA[opena11y]]></category>
		<category><![CDATA[web a11y]]></category>
		<category><![CDATA[Win8]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=179</guid>
		<description><![CDATA[Whilst guidelines for web accessibility have been in existence for several years and are slowly evolving, until now there has been a lack of best practices targeted specifically at the additional complications of mobile accessibility (web or native). This is &#8230; <a href="/openingaccessibility/2013/06/bbc-publish-draft-mobile-accessibility-guidelines-to-address-developer-assumptions/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Whilst guidelines for web accessibility have been in existence for several years and are slowly evolving, until now there has been a lack of best practices targeted specifically at the additional complications of mobile accessibility (web or native). This is especially important now mobile use is so predominant and I believe is globally in the majority due to so many people outside the affluent West having phones and not computers.</p>
<p>Yesterday Henny Swan finally made an exciting official tweet:</p>
<blockquote><p>Introducing the Draft BBC Mobile Accessibility Standards and Guidelines:<a href="http://t.co/5brg5IDZoD" target="_blank" rel="nofollow">bbc.co.uk/blogs/internet…</a><a title="Mobile" href="https://hootsuite.com/dashboard#">#Mobile</a><a title="Development" href="https://hootsuite.com/dashboard#">#Development</a><a title="Design" href="https://hootsuite.com/dashboard#">#Design</a><a title="BBC" href="https://hootsuite.com/dashboard#">#BBC</a></p></blockquote>
<p>Henny also <a href="http://www.iheni.com/draft-bbc-mobile-accessibility-guidelines/">blogged</a> and Gareth Ford Williams followed up with more details on LinkedIn</p>
<blockquote><p>Just to let you all know the Draft BBC Mobile Accessibility Guidelines were published today. You can find them on the Future Media Standards and Guidelines site at:<a href="http://www.linkedin.com/redir/redirect?url=http%3A%2F%2Fwww%2Ebbc%2Eco%2Euk%2Fguidelines%2Ffuturemedia%2Faccessibility%2Fmobile_access%2Eshtml&amp;urlhash=MY3u" target="_blank">http://www.bbc.co.uk/guidelines/futuremedia/accessibility/mobile_access.shtml</a></p>
<p>A blog post about them is here: <a href="http://www.linkedin.com/redir/redirect?url=http%3A%2F%2Fwww%2Ebbc%2Eco%2Euk%2Fblogs%2Finternet%2Fposts%2FAccessibility-Mobile-Apps&amp;urlhash=FT_l" target="_blank">http://www.bbc.co.uk/blogs/internet/posts/Accessibility-Mobile-Apps</a></p>
<p>The guidelines are in accessible PDF and Word format at the moment but should be in a much more digestible and usable format soon so watch this space.<br />
These standards have been developed over the last 18 months and have been developed and tested using the following mobile projects: BBC Olympics, BBC Sport, BBC iPlayer, BBC iPlayer Radio and BBC Weather.</p>
<p>We are asking for feedback to identify areas of focus for the the further development of the guidelines and any comments, would be greatly welcome.</p>
<p>Best Regards,</p>
<p>Gareth Ford Williams<br />
Head of Accessibility, BBC Future Media</p></blockquote>
<p>This is an excellent start and should help raise awareness of the issues amongst commissioners, designers and developers and so improve the accessibility quality of apps and mobile tech in general.</p>
<div id="attachment_193" style="width: 310px" class="wp-caption aligncenter"><a href="/openingaccessibility/wp-content/uploads/2013/06/mobilea11y.jpg"><img class="size-medium wp-image-193" alt="User viewing mobile screen with a magnifying glass" src="/openingaccessibility/wp-content/uploads/2013/06/mobilea11y-300x211.jpg" width="300" height="211" srcset="/openingaccessibility/wp-content/uploads/2013/06/mobilea11y-300x211.jpg 300w, /openingaccessibility/wp-content/uploads/2013/06/mobilea11y.jpg 480w" sizes="(max-width: 300px) 100vw, 300px" /></a><p class="wp-caption-text">Image by Hajime NAKANO http://www.flickr.com/photos/jetalone/</p></div>
<p style="text-align: center;">So just what exactly are the extra accessibility issues introduced by mobile tech? Well I like to think that accessibility boils down to this simple design mantra:</p>
<blockquote><p>Don&#8217;t make assumptions about how users will access your content or app.</p></blockquote>
<p>Obviously any engineering or craft activity has to make some assumptions or nothing useful would ever be created. However the assumptions can and should be minimised within meaningful constraints if we want to avoid excluding users (and so reducing market).</p>
<p>For example, it&#8217;s a good idea to not assume that all users will be using a mouse and can easily interpret visual-only cues. These assumptions were initially thought of in the context of users with disabilities, though some folks (myself included) pointed out they effect a much wider usage. For example, many users prefer to use only a keyboard for speed of access and  a search engine &#8220;spider robot&#8221; is effectively a blind user.  In fact a few years ago there was a hot debate over if accessibility should be primarily for people with disabilities or of general utility. Fortunately, this soon blew over and accessibility efforts are now concentrated on improving accessibility for all users and use cases.</p>
<p>With the rapid rise in mobile technologies (and I include all portable formats in that definition) it soon became clear that &#8220;contextual disability&#8221; also occurs and needs to be specifically addressed. For example in bright light conditions the screen becomes hard  to read, if not impossible. thus, adaptations usually designed for people with low vision or blindness are potentially usefully for all users in certain common circumstances. Another example is that when driving a car verbal interactions are much more appropriate so hands and eyes can be used for safe navigation.</p>
<p>Another design assumption has become apparent with the very wide variation in screen size and resolution  across devices (eg Apple&#8217;s retina displays).  In the early days of the web this was not an issue as screen size was a small range and as text was the content the browser was free to reflow to any screen size/resolution. However as I found when trying to make my first ever website with graphics look good on both 19&#8243; and 13&#8243; monitors, it isn&#8217;t that easy to accommodate variations. In fact given the state of browsers and HTML then I gave up.</p>
<p>Now we have a name for handling variation in screen resolution on the web; &#8216;<a href="http://en.wikipedia.org/wiki/Responsive_web_design">Responsive design</a>&#8216;. With this a few core techniques allow the user experience to be adjusted according to screen size. At this point in time however, the technology such as CSS media queries is still a little immature, certainly when compared to some native solutions I have used. However this is a hot topic with solutions like <a href="http://dev.w3.org/csswg/css-grid/">CSS Grid Layout</a> looking very interesting. We can expect rapid improvements.</p>
<p>In addition to screen size variation, the almost ubiquitous use of touch technology on mobile devices provides a new challenge for designers wishing to target multiple devices. Leading the charge are web apps and widgets which offer a path to creating solutions that can run on devices ranging from small screen mobile with touch to traditional desktop with large monitor, keyboard and mouse. In this space the W3C and others are working on <a href="http://www.w3.org/2010/webevents/">new specifications for handling different input modes</a> in unified ways.</p>
<p>Windows 8 appears to be targeting this world of portable and desktop devices and their different interaction modes. At the moment it&#8217;s somewhat schizophrenic with both the Windows Store Apps and traditional Windows 7 style desktop sides being quite separate. However I think we can expect Microsoft to learn and develop the user experience rapidly. What is of special interest is that Windows Store apps can be created using the key W3C specified open technologies (actually, this may be the preferred technology). This allows portable solutions to be more easily developed. Add the fact that Microsoft now play an active part in web standardisation efforts, we can expect improvements in the device and accessibility support in both Windows and web solutions.</p>
<p>A final assumption is more an issue of device and operating system manufacturers not supporting interaction methods available on desktop and that are commonly used by people with disabilities. In particular people with physical disabilities who use simple switch devices to interact have had little access to mobile devices. On the desktop, switches are nowadays connected as USB devices (often simulating games controllers) but very few mobile devices have USB sockets. Bluetooth is a viable alternative and for example Komodo OpenLab&#8217;s <a href="http://komodoopenlab.com/tecla/">Tecla</a> switch access device uses this approach to provide switch control of Android and iOS devices. An exciting development here is that iOS 7 includes switch controlled scanning and so we can hope Android and Windows will take note and follow.</p>
<p>In some ways it&#8217;s reassuring that mainstream developers are hitting and addressing many of the issues that the accessibility community has be working on for some time. We can expect faster and more innovative solutions. As long as accessibility remains firmly on the agenda and the accessibility community keeps up the highly effective work to help ensure vendors keep their eye on the ball..</p>
<p>Along with the <a href="http://www.w3.org/Mobile/">W3C Mobile web Initiative</a>,  the BBC draft guidelines have an important part to play as we collectively figure out how to remove damaging assumptions and create usable and accessible solutions that are available on a wide range of platform formats. As the authors point out, these are a starting point and they welcome the discussion on how to move forward.</p>
<p>As a footnote, the <a href="http://www.cloud4all.info/">Cloud4All</a> EU project is exploring automatic personalisation of devices according to a users accessibility preferences profile. This will act as a way to help remove the sensitivity to designer assumptions by applying the best available adjustments. An important part of this work is context awareness.</p>
<p>[Update 2013-06-20] in addition to the W3C Web Events working group the <a href="http://www.w3.org/WAI/IndieUI/">IndieUI</a> and <a href="http://www.w3.org/2012/pointerevents/">Pointer Events</a> working groups are also working on combined input modes.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/06/bbc-publish-draft-mobile-accessibility-guidelines-to-address-developer-assumptions/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Screencast of Maavis and Cloud4All integration</title>
		<link>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/</link>
		<comments>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/#respond</comments>
		<pubDate>Tue, 23 Apr 2013 09:33:50 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[dementia]]></category>
		<category><![CDATA[opena11y]]></category>
		<category><![CDATA[opensource]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=138</guid>
		<description><![CDATA[I finally put up a short screencast of Maavis in use. This also demonstrates how integration with Cloud4All provides automatic personalisation of settings based on a token that identifies the user. Cloud4All is an EU project that is implementing part &#8230; <a href="/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>I finally put up a short screencast of <a href="http://maavis.fullmeasure.co.uk/">Maavis</a> in use. This also demonstrates how integration with <a href="http://www.cloud4all.info/">Cloud4All</a> provides automatic personalisation of settings based on a token that identifies the user. Cloud4All is an EU project that is implementing part of the <a href="http://gpii.net/">GPII</a> personalisation infrastructure.</p>
<p><iframe width="640" height="360" src="http://www.youtube.com/embed/F1ATPYSv02Y?feature=oembed" frameborder="0" allowfullscreen></iframe></p>
<p>To record I used <a href="http://camstudio.org/">CamStudio </a>on Windows and the slight echo seems to be a result of turning on preview of the microphone in Windows and using the CamStudio option of recording from &#8216;speakers&#8217;. This allowed both my voice and Maavis synthetic speech to be mixed and recorded. You get a slight delay in hearing your voice as you record, no doubt due to double latency, but I found I got used to it.</p>
<p>I also made life a little harder for myself as Maavis and Cloud4All are running in a Virtual Machine (using the VMWare player). Running CamStudio in the same VM killed the response and Maavis took forever to run. So I ran CamStudio in the Host OS and recorded the VM window.</p>
<p>YouTube thought I was using widescreen, which I was not. This may have been because I had not full screened the VM window so the hight was reduced. However I also have my Windows TaskBar on the left whic halso reduces the widht. Who knows, I don&#8217;t think it has any practical effect.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/04/screencast-of-maavis-and-cloud4all-integration/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Developing programs designed for AT users</title>
		<link>/openingaccessibility/2013/01/developing-programs-for-at-users-and-that-run-on-multiple-platforms/</link>
		<comments>/openingaccessibility/2013/01/developing-programs-for-at-users-and-that-run-on-multiple-platforms/#respond</comments>
		<pubDate>Wed, 30 Jan 2013 18:23:22 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[a11y]]></category>
		<category><![CDATA[opena11y]]></category>
		<category><![CDATA[opensource]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=68</guid>
		<description><![CDATA[It can be a challenging enough to develop programs (and apps) that provide a first class user experience for users of Assistive Technology (AT) such as screen readers. There are plenty of examples of programs &#8216;out there&#8217; with varying degrees &#8230; <a href="/openingaccessibility/2013/01/developing-programs-for-at-users-and-that-run-on-multiple-platforms/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>It can be a challenging enough to develop programs (and apps) that provide a first class user experience for users of Assistive Technology (AT) such as screen readers. There are plenty of examples of programs &#8216;out there&#8217; with varying degrees of broken accessibility when used with AT. Certainly enough to demonstrate that good accessibility is not a given and requires effort. So if you want to design specifically for users of AT you can expect a good challenge indeed.</p>
<p>If you add the requirement to support a range of platforms then the challenge gets even more interesting . There appears to be little information &#8216;out there&#8217; to guide developers in the best approaches and tools available for AT friendly cross platform solutions.  In this post I explore the underlying issues.  In a later post I&#8217;ll present some of the available solutions. While I concentrate on the technical aspects,  I do hope it is obvious that good UX design for AT users is of paramount importance.</p>
<p>In general there are 2 key aspects of accessibility and programs designed specifically for AT users; the accessibility of the format of  the primary information or documents and the accessibility of the User Interface (UI). Developers want to use a toolkit that enables them to ensure great interaction with both by AT users but are often not sure how to approach it.</p>
<p>Thoughts about developing such AT targeted programs led Prateek Tandon of <a href="http://projectpossibility.org/">ProjectPossibility</a> to ask us this question:</p>
<blockquote><p>is there a particularly good language / toolset / framework to build out-of-box working applications that will work on the major desktop platforms with popular screen readers such as NVDA, JAWS, and VoiceOver?</p></blockquote>
<p>The answer to that is &#8220;it&#8217;s complicated&#8221;, especially when I generalise it to &#8220;will work with AT&#8221;  Each platform, whether desktop or mobile has development tools which will mostly create accessible application UIs, <strong>if</strong> you pay attention to detail and perform proper testing. In addition, there are several tools available for creating cross platform native  solutions,. Many of these are mature opensource projects, including those for C++, Java and Python. In addition HTML apps and widgets are fast becoming a viable alternative, though not without some complications as we&#8217;ll explore below. The requirement for 1st class AT integration adds another dimension of complexity. The ATs on each platform are different (with the notable exception of OS X and iOS, and the Win8 versions). Plus the critical Accessibility APIs that provide the glue between the apps and AT are also different.  These accessibility APIs enable AT users to explore and manipulate the application UI and be made aware of status changes or other events.</p>
<p>Considering screen readers, for example: on Windows there is NVDA and JAWs using MSAA, UIA and IAccessible2 APIs, on Linux we have Orca using AT/SPI, on OS X and iOS there is VoiceOver and on Android it&#8217;s EyesFree.  This complexity makes it much harder to create apps that work as desired on all platforms, especially if, as a developer, you make life hard for yourself by creating your own custom controls. It&#8217;s so much better to use standard native controls provided by the OS (buttons, lists etc) as they have accessibility baked in. The next preferable choice is to use toolkits with custom controls that have well developed and tested accessibility and AT support. Developing custom controls from scratch requires you to implement <strong>all</strong> the accessibility yourself, not an easy task to get right given the variations and edge cases to be considered.</p>
<p>As an example of this complexity Java Swing is popular for UI development of Java programmes. However, it has a least one short-coming for AT users, namely the need to perform a fiddly manual install of an extra package for AT access on Windows (Java Access Bridge). Of course an excellent solution to this specific problem would be for the open a11y community to improve the Java Access Bridge so the problem goes away. This would also be of benefit to users of the Windows Screen reader NVDA who want to access OpenOffice. For OpenOffice users, however, another solution is looking feasible as the community are looking at porting IBM&#8217;s work on supporting the <a href="http://www.linuxfoundation.org/collaborate/workgroups/accessibility/iaccessible2">IAccessibile2</a> open standard from Symphony to Apache OpenOffice).</p>
<p>HTML applications are rapidly becoming popular with developers, and look set to become the preferred technology for creating cost effective, portable and maintainable programs or apps. A key advantage is that the browser becomes a virtual platform that is (at least in theory) the same on any platform using any browser. This requires the standards to be followed carefully by the browser developers. The <a href="http://www.w3.org/">W3C standards</a> are becoming richer and active community input is helping with speed and requirements. Browsers are now multilaterally implementing the standards more accurately and Javascript performance is no longer an issue. Critically, Javascript APIs providing access to platform capabilities are being specified and implemented. Thus full featured HTML applications to match native version are now being created.</p>
<p>However when we consider <a href="http://www.w3.org/WAI/">HTML app accessibility</a> and integration with AT there is a more complex picture. This is due to the deeper stack of software parts compared with native apps. All the parts have to work together to ensure AT can fully access and present the HTML app&#8217;s UI. The web browser itself must implement the platform Accessibility API and cleanly map HTML accessibility through it to the AT. It does this for both it&#8217;s own chrome and the HTML content being handled. The HTML apps must be carefully developed to use accessibility best practices, especially those that effect AT. In particular good markup must be used and <a href="http://www.w3.org/WAI/intro/aria.php">WAI ARIA</a> adds important extra detail necessary for accessible applications, especially for events and updates.</p>
<p>Again you can make life easier for yourself by sticking to the HTML defined controls or using HTML frameworks with built-in accessibility. Open frameworks such as jQuery and Dojo have had contributions from <a href="http://paciellogroup.com/">TPG</a>, Mozilla and others who care about accessibility. Other frameworks others like <a href="http://wiki.fluidproject.org/display/fluid/Fluid+accessibility">fluid</a> have had accessibility baked in. In addition, when addressing general platform portability issues, tools like Apache Cordova/PhoneGap and jQueryMobile  provide mature open source solutions with reasonable accessibility.</p>
<p>The accessibility of touch screen devices is adding more challenges, and also the potential for innovation in UX for AT users. This is being spearheaded by work on mobile devices (though touch is also now becoming a built in option for laptop and desktop devices as the boundaries blur eg keyboard with a tablet or Windows 8).  For example the ways <a href="http://www.digitaltrends.com/mobile/android-and-ios-accessibility-can-help-everybody/">blind users can access touch screens</a> is improving through the integrated provision of solutions like VoiceOver, talkBack, kickBack and others. The solutions for others such as those with physical or cognitive advisabilities are still a way behind. This is fertile ground for research and new solutions.</p>
<p>We have outlined the issues involved when  creating applications designed to be used via AT and that run on several platforms. In a future post we&#8217;ll explore the options available in more detail, <strong>but I need your input</strong>. If you have any experience of developing programs with AT users in mind pop your thoughts and experience in the comments and I&#8217;ll compile them for the next post.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2013/01/developing-programs-for-at-users-and-that-run-on-multiple-platforms/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Accessibility update</title>
		<link>/openingaccessibility/2011/06/accessibility-update/</link>
		<comments>/openingaccessibility/2011/06/accessibility-update/#respond</comments>
		<pubDate>Sun, 12 Jun 2011 14:59:56 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[opena11y]]></category>
		<category><![CDATA[opensource]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=46</guid>
		<description><![CDATA[Here&#8217;s a quick update of the main open accessibility activities that are on my radar. Do drop me a line if any are of interest to you. This has been a very busy time, especially as our new company [pre]activity &#8230; <a href="/openingaccessibility/2011/06/accessibility-update/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>Here&#8217;s a quick update of the main open accessibility activities that are on my radar. Do drop me a line if any are of interest to you.</p>
<p>This has been a very busy time, especially as our new company [pre]activity takes off (more soon). I&#8217;ve not been so closely active with <a href="http://www.mozilla.org/access/">Mozilla</a> and <a href="http://projects.gnome.org/accessibility/">GNOME</a> lately, but am keeping a keen eye on the interesting activity in both of these key open accessibility projects.</p>
<div id="attachment_60" style="width: 570px" class="wp-caption alignnone"><a title="Source - http://scyp.idrc.ocad.ca/projects/tekla/the-shield " href="/openingaccessibility/wp-content/uploads/2011/06/Meadl_hardware.png"><img class="wp-image-50      " style="margin-top: 10px; margin-bottom: 10px;" title="Teckla shield" src="/openingaccessibility/wp-content/uploads/2011/06/Meadl_hardware.png" alt="Electronic ciruit board wired up to a joystick controller switch" width="560" height="314" /></a><p class="wp-caption-text">Teckla shield connected to a joystick</p></div>
<p>The big story at the moment is <a href="http://wiki.apache.org/incubator/OpenOfficeProposal">proposed submission of the Open Office code</a> by Oracle and IBM to the Apache Incubator. The frantic flurry of discussion has quietened down a bit and the vote is now on. As far as open accessibility is concerned, having the OOo code in the incubator has great potential in fostering collaboration between the many interested parties. Not only does incubation develop community diversity and strength, but the use of the permissive neutral Apache licence enables engagement by all, including those interested in commercial use. This is important given the number of  derived works (see the proposal link above for a chart). Thus, for example,  both IBM and LibreOffice will be able to use and contribute to the core code (if they so choose). One possible benefit that&#8217;s been mentioned is the contribution of Symphony&#8217;s more mature IA2 api implementation, allowing for example,  NVDA screen reader users to use OOo without sighted assistance. In addition Apache could offer a good home for the various a11y add-ons to OOo such, as those from AEGIS project.</p>
<p><a href="http://www.realisepotential.org/">Project Realise</a> is nearing the end of the JISC funded period and the web site for encouraging open innovation in accessibility software is up in prototype form. As it stands it has a way to go to fully support the vision of  mentoring projects to the point of open innovation through maturity in open development, but after  a workshop and debriefing, many of the critical &#8216;people&#8217; focussed features  should be soon appearing.</p>
<p>The <a href="http://straight-street.com/gallery.php">Mulberry symbol set from Straight Street</a> has surpassed 3,000 symbols and we&#8217;re working on partner support and internationalisation with a crowdsourcing element.</p>
<p><a href="http://maavis.fullmeasure.co.uk/">Maavis</a> simplified access to media and communications is progressing steadily, with various possible uses and collaborations being investigated. There was considerable interest generated by the Mail article with Sylvia Syms, including some commercial. One of the top priorities is to replace Skype with something that transparently does video calls  without getting in the way. We&#8217;ve also be thinking about a web version. What&#8217;s interesting is that since we started the approach to consumer interfaces has rapidly embraced simpler touch interfaces, thus making it easier to implement Maavis features.</p>
<p>Portable accessibility of and through web apps and widgets is fast becoming very interesting indeed. <a href="http://code.google.com/a/apache-extras.org/p/rave-in-context/">Rave in Context</a> is creating widget templates, <a href="http://scyp.idrc.ocad.ca/projects/tekla/">Tekla</a> is providing switch access via bluetooth. Both Straight Street projects and Maavis are also heading in this direction. Tablet apps are being enthusiastically snapped up at grass roots by end users and their supporters as a way to provide low cost innovative AT need solutions. This self-service is proving disruptive in the AT provision services, and raising some serious questions. Open development of web apps can have a big impact here, especially in portability and quality.</p>
<p>On the European front, the <a href="http://www.eaccessplus.eu/">eAccess+</a> and <a href="http://www.atis4all.eu/">ATIS4All</a> thematic networks are active and spreading knowledge. Another large project to implement some parts of the <a href="http://gpii.net/">GPII</a> vision is under review by the EC and we hope will receive funding soon.</p>
<p>Finally, in events, I&#8217;m excited about the DevCSI &amp; Full Measure <a href="http://www.ukoln.ac.uk/events/devcsi/accessibility_hackdays/">a11y hackday</a> that will take place on the 21/22 June. I hope we&#8217;ll see some interesting hacking and collaborations happening. We&#8217;ve certainly got a great mixture of people registered, and excellent keynote speaker in David Banes, Sandi Wassmer and Julian Harty. I&#8217;ve ordered a Tekla prototype from <a href="http://komodoopenlab.com/portfolio/tekla/">Komodo OpenLab</a> and hopefully it will arrive in time for us to play with it.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2011/06/accessibility-update/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Upgraded to HTML5 themes</title>
		<link>/openingaccessibility/2011/05/upgraded-to-html5-themes/</link>
		<comments>/openingaccessibility/2011/05/upgraded-to-html5-themes/#respond</comments>
		<pubDate>Thu, 12 May 2011 11:18:43 +0000</pubDate>
		<dc:creator><![CDATA[Steve]]></dc:creator>
				<category><![CDATA[opena11y]]></category>
		<category><![CDATA[personal]]></category>
		<category><![CDATA[html5]]></category>
		<category><![CDATA[themes]]></category>
		<category><![CDATA[twenttenfive]]></category>
		<category><![CDATA[wordpress]]></category>

		<guid isPermaLink="false">/openingaccessibility/?p=37</guid>
		<description><![CDATA[I just installed Richard Sheperd&#8217;s TwentyTenFive HTML5 version of the default WordPress theme and Sylvia Egger&#8217;s Accessible Five accessibility enhancing child theme. There was a slight glitch with the name of the TwentyTenFive folder name having changed, but all seems &#8230; <a href="/openingaccessibility/2011/05/upgraded-to-html5-themes/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
				<content:encoded><![CDATA[<p>I just installed Richard Sheperd&#8217;s <a href="http://www.twentytenfive.com/">TwentyTenFive</a> HTML5 version of the default WordPress theme and Sylvia Egger&#8217;s <a href="http://accessible.sprungmarker.de/2011/04/accessible-five">Accessible Five</a> accessibility enhancing child theme.</p>
<p>There was a <a href="http://accessible.sprungmarker.de/2011/04/accessible-five/#comment-548">slight glitch</a> with the name of the TwentyTenFive folder name having changed, but all seems well now after I renamed it back to &#8216;TwentyTenFive&#8217;.</p>
<p>We can just hope these both quickly make into WP core. Especially as there was a recent <a href="http://make.wordpress.org/accessibility/2011/05/06/if-anyone-would-like-to-take-a-stroll-th/">call for WP accessibility</a> contributions.</p>
]]></content:encoded>
			<wfw:commentRss>/openingaccessibility/2011/05/upgraded-to-html5-themes/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
